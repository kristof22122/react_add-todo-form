{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","components/FormAddTodo/FormAddTodo.tsx","api/todos.ts","App.tsx","api/users.ts","index.tsx"],"names":["TodoInfo","props","todo","title","completed","UserInfo","user","name","email","TodoList","state","todoList","this","className","map","classNames","id","React","Component","FormAddTodo","lastId","Math","max","userName","isTitleEmpty","isUserNameEmpty","clearState","setState","handleChangeTitle","event","value","target","handleChangeUser","validation","valid","trim","handleSubmit","preventDefault","addTodo","userId","usersList","find","onSubmit","type","onChange","placeholder","todos","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todosWithUser","App","newTodo","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab8e6fee.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = (props) => {\n  const { todo } = props;\n\n  return (\n    <>\n      <ul>\n        <li>\n          Task:\n          {' '}\n          {todo.title}\n        </li>\n        <li>\n          Status:\n          {' '}\n          {todo.completed ? 'Completed' : 'In process'}\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = (props) => {\n  const { user } = props;\n\n  return (\n    <>\n      <ul>\n        <li>\n          Name:\n          {' '}\n          {user.name}\n        </li>\n        <li>\n          Email:\n          {' '}\n          {user.email}\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype State = {\n\n};\n\ntype Props = {\n  todoList: Todo[];\n  usersList: User[];\n  addTodo: (newTodo: Todo) => void;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n\n  };\n\n  render() {\n    const { todoList } = this.props;\n\n    return (\n      <div>\n        <h1>\n          List of todos\n        </h1>\n        <ul className=\"list-group list-group-flush\">\n          {todoList.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames('list-group-item list-group-item-primary', { 'list-group-item-success': todo.completed })}\n            >\n              {todo.user && <UserInfo user={todo.user} />}\n              {todo.user && <TodoInfo todo={todo} />}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype State = {\n  title: string;\n  userName: number;\n  isTitleEmpty: boolean;\n  isUserNameEmpty: boolean,\n};\n\ntype Props = {\n  todoList: Todo[];\n  usersList: User[];\n  addTodo: (newTodo: Todo) => void;\n};\n\nexport class FormAddTodo extends React.Component<Props, State> {\n  lastId = Math.max(...this.props.todoList.map((todo) => todo.id)) + 1;\n\n  state: State = {\n    title: '',\n    userName: 0,\n    isTitleEmpty: false,\n    isUserNameEmpty: false,\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      userName: 0,\n      isTitleEmpty: false,\n      isUserNameEmpty: false,\n    });\n  };\n\n  handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n      isTitleEmpty: false,\n    });\n  };\n\n  handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      userName: +value,\n      isUserNameEmpty: false,\n    });\n  };\n\n  validation = () => {\n    const {\n      userName,\n      title,\n    } = this.state;\n\n    let valid = true;\n\n    if ((!userName)) {\n      this.setState({\n        isUserNameEmpty: true,\n      });\n\n      valid = false;\n    }\n\n    if (!title.trim()) {\n      this.setState({\n        isTitleEmpty: true,\n      });\n\n      valid = false;\n    }\n\n    return valid;\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const isValid = this.validation();\n\n    if (isValid) {\n      this.props.addTodo({\n        id: this.lastId,\n        title: this.state.title,\n        completed: false,\n        userId: this.state.userName,\n        user: this.props.usersList.find(user => this.state.userName === user.id) || null,\n      });\n      this.lastId += 1;\n\n      this.clearState();\n    }\n  };\n\n  render() {\n    const { usersList } = this.props;\n    const { title, isTitleEmpty, isUserNameEmpty } = this.state;\n\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n        >\n          <fieldset>\n            <legend>Add new TODOs</legend>\n            <div className=\"mb-3\">\n              <input\n                type=\"text\"\n                value={title}\n                onChange={this.handleChangeTitle}\n                className=\"form-control\"\n                placeholder=\"TODO\"\n              />\n              {isTitleEmpty && ('Please enter the title')}\n            </div>\n            <div className=\"mb-3\">\n              <select\n                id=\"disabledSelect\"\n                className=\"form-select\"\n                name=\"user\"\n                value={this.state.userName}\n                onChange={this.handleChangeUser}\n              >\n                <>\n                  <option value={0}>\n                    Choose a user\n                  </option>\n                </>\n                {usersList.map(user => (\n                  <option\n                    key={user.id}\n                    value={user.id}\n                  >\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n              {isUserNameEmpty && 'Please choose a user'}\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Add\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './App.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FormAddTodo } from './components/FormAddTodo';\n\nimport usersFromServer from './api/users';\nimport todos from './api/todos';\n\nconst users: User[] = usersFromServer.map(user => ({\n  ...user,\n}));\n\nconst findUser = (userId: number) => {\n  return users.find(user => userId === user.id) || null;\n};\n\nconst todosWithUser: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\ntype State = {\n  todos: Todo[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todos: todosWithUser,\n  };\n\n  addTodo = (newTodo: Todo) => {\n    this.setState((currentState) => {\n      return {\n        todos: [...currentState.todos, newTodo],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"todos\">\n          <FormAddTodo\n            addTodo={this.addTodo}\n            usersList={users}\n            todoList={this.state.todos}\n          />\n          <TodoList\n            addTodo={this.addTodo}\n            usersList={users}\n            todoList={this.state.todos}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}